name: build

on: [push, pull_request]

jobs:
  build-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
    env:
      GRADLE_OPTS: "-Dorg.gradle.jvmargs='-Xmx4G'"
    steps:
    - name: Prepare Environment
      run: |
        sudo apt-get update
        curl -Lo kitware-archive.sh https://apt.kitware.com/kitware-archive.sh
        sudo bash ./kitware-archive.sh

    - name: Install Dependencies
      run: sudo apt-get install ninja-build cmake

    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true

    # ─────────────── New: Patch MainActivity ───────────────
    - name: Patch MainActivity to /lovegame root
      run: |
        FILE=app/src/main/java/org/love2d/android/MainActivity.java

        # 1) Add import android.os.Environment if missing
        grep -q "import android.os.Environment" "$FILE" || \
          sed -i '/import java.util.zip.ZipFile;/a import android.os.Environment;' "$FILE"

        # 2) Replace getExternalFilesDir("games") with new File(Environment.getExternalStorageDirectory(), "lovegame")
        sed -i 's|getExternalFilesDir("games")|new File(Environment.getExternalStorageDirectory(), "lovegame")|g' "$FILE"

    # ─────────────── New: Ensure storage permission ───────────────
    - name: Ensure READ_EXTERNAL_STORAGE in Manifest
      run: |
        MANIFEST=app/src/main/AndroidManifest.xml

        # Insert permission if not present
        grep -q 'android.permission.READ_EXTERNAL_STORAGE' "$MANIFEST" || \
          sed -i '/<application/a\
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />' "$MANIFEST"
    # ──────────────────────────────────────────────────────────────

    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: adopt-hotspot
        java-version: 17
        cache: gradle

    - name: Build Normal Flavor
      run: bash ./gradlew assembleNormalRecord${{ matrix.build_type }}

    - name: Build Release-specific Binaries
      if: ${{ matrix.build_type == 'Release' }}
      run: bash ./gradlew bundleNormalNoRecordRelease bundleEmbedRecordRelease bundleEmbedNoRecordRelease

    - name: Artifact (Normal debug APK)
      if: ${{ matrix.build_type == 'Debug' }}
      uses: actions/upload-artifact@v4
      with:
        name: love-android-debug.apk
        path: app/build/outputs/apk/normalRecord/debug/app-normal-record-debug.apk

    - name: Artifact (Normal unsigned APK)
      if: ${{ matrix.build_type == 'Release' }}
      uses: actions/upload-artifact@v4
      with:
        name: love-android.apk
        path: app/build/outputs/apk/normalRecord/release/app-normal-record-release-unsigned.apk

    - name: Artifact (Normal AAB w/o recording)
      if: ${{ matrix.build_type == 'Release' }}
      uses: actions/upload-artifact@v4
      with:
        name: love-android-ps.aab
        path: app/build/outputs/bundle/normalNoRecordRelease/app-normal-noRecord-release.aab

    - name: Artifact (Embed AAB)
      if: ${{ matrix.build_type == 'Release' }}
      uses: actions/upload-artifact@v4
      with:
        name: love-android-embed-record.aab
        path: app/build/outputs/bundle/embedRecordRelease/app-embed-record-release.aab

    - name: Artifact (Embed AAB w/o recording)
      if: ${{ matrix.build_type == 'Release' }}
      uses: actions/upload-artifact@v4
      with:
        name: love-android-embed.aab
        path: app/build/outputs/bundle/embedNoRecordRelease/app-embed-noRecord-release.aab

    - name: Artifact (Debug symbols)
      uses: actions/upload-artifact@v4
      with:
        name: love-android-unstripped-debugsyms-${{ matrix.build_type }}
        path: app/build/intermediates/cxx
        
